// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// ROLES =
// 101 : Admin
// 102 : Pembeli
// 103 : Penjual
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @unique @default(cuid())
  createdAt  DateTime  @default(now())
  modifiedAt DateTime? @default(now()) @updatedAt

  username        String   @unique
  password        String
  namaLengkap     String
  jenisAkun       String
  noIndukKoperasi String?
  gambar          String?
  role            ROLES[]  @default([R101])
  active          Boolean? @default(true)

  alamat    Alamat?
  Keranjang Keranjang?
  produk    Produk[]
  Order     Order?
}

enum ROLES {
  R101
  R102
  R103
  R104
}

model Alamat {
  id         String    @id @unique @default(cuid())
  createdAt  DateTime  @default(now())
  modifiedAt DateTime? @default(now()) @updatedAt

  provinsi     String
  kabupaten    String?
  kecamatan    String?
  kodePos      String?
  detailAlamat String?
  latitude     Decimal?
  longitude    Decimal?

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model Produk {
  id         String   @id @unique @default(cuid())
  createdAt  DateTime @default(now())
  modifiedAt DateTime @default(now()) @updatedAt

  namaProduk String
  gambar     String[]
  deskripsi  String
  sku        String?
  harga      Float
  stok       Int
  terjual    Int?

  userId String
  user   User   @relation(fields: [userId], references: [id])

  itemKeranjang   ItemKeranjang[]
  kategori_produk ProdukKategori[]
}

model Kategori {
  id         String   @id @unique @default(cuid())
  createdAt  DateTime @default(now())
  modifiedAt DateTime @default(now()) @updatedAt

  kategori  String
  deskripsi String
  gambar    String

  produk_kategori ProdukKategori[]
}

// Relasi produk - kategori
model ProdukKategori {
  createdAt DateTime @default(now())

  produk     Produk   @relation(fields: [produkId], references: [id])
  produkId   String
  kategori   Kategori @relation(fields: [kategoriId], references: [id])
  kategoriId String

  @@id([produkId, kategoriId])
}

model ItemKeranjang {
  createdAt  DateTime @default(now())
  modifiedAt DateTime @default(now()) @updatedAt

  kuantitas Int @default(0)
  subTotal  Int @default(0)

  produkId String
  produk   Produk @relation(fields: [produkId], references: [id])

  Keranjang   Keranjang @relation(fields: [keranjangId], references: [id])
  keranjangId String

  @@id([produkId, keranjangId])
}

model Keranjang {
  id         String   @id @unique @default(cuid())
  createdAt  DateTime @default(now())
  modifiedAt DateTime @default(now()) @updatedAt

  total Float @default(0)

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  itemKeranjang ItemKeranjang[]
}

model Order {
  id         String   @id @unique @default(cuid())
  createdAt  DateTime @default(now())
  modifiedAt DateTime @default(now()) @updatedAt

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

// model RiwayatOrder {

// }
